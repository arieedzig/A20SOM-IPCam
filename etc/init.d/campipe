#!/bin/sh
### BEGIN INIT INFO
# Provides:          campipe
# Required-Start:    $network crtmpserver
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Piping and encoding camera to streaming server
# Description:       Piping and encoding using ffmpeg and send to streaming server
### END INIT INFO

# Author: Arieedzig 

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Camera pipe"
NAME=campipe
DAEMON=/usr/bin/screen
SCREEN_NAME="Capture"
DAEMON_ARGS=" -dmS $SCREEN_NAME "
STOP_ARGS=" -XS $SCREEN_NAME quit"
DAEMON_CONF="/etc/campipe/capture.sh"
DAEMON_USER="root"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
ENABLED="yes"

#[ -r /etc/default/$NAME ] && . /etc/default/$NAME

[ -x $DAEMON ] || exit 0
[ -r $DAEMON_CONF ] || exit 0

[ $ENABLED = "yes" ] || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

do_start()
{
    if [ -f $PIDFILE ]; then
      RETVAL=2
      echo -n " is already running ($PIDFILE found)"
    else
        start-stop-daemon --start --quiet --background -m --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
                || return 1
        start-stop-daemon --start --quiet --background -m --pidfile $PIDFILE --exec $DAEMON -- \
               $DAEMON_ARGS $DAEMON_CONF \
                || return 2
        RETVAL="$?"
   fi
   return "$RETVAL"
}

do_stop()
{
    if ! [ -f $PIDFILE ]; then
      RETVAL=2
      echo -n " not running ($PIDFILE not found)"
    else
        start-stop-daemon --stop --quiet --oknodo --exec $DAEMON -- $STOP_ARGS
        RETVAL="$?"
        if [ $RETVAL -eq 2 ]; then
                start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
                [ "$RETVAL" = 2 ] && return 2

                start-stop-daemon --stop --quiet --oknodo --retry=INT/30/KILL/5 --exec $DAEMON
                [ "$?" = 2 ] && return 2
        fi

        case "$?" in
                0|1) rm -f $PIDFILE ;;
        esac
     fi
     return "$RETVAL"
}

case "$1" in
  start)
    log_daemon_msg "Starting $DESC " "$NAME"
    do_start
    case "$?" in
                0|1) log_end_msg 0 ;;
                2) log_end_msg 1 ;;
        esac
        ;;
  stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) log_end_msg 0 ;;
                2) log_end_msg 1 ;;
        esac
        ;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  restart)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  force-reload)
        restart
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
        exit 3
        ;;
esac

:
